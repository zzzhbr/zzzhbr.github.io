<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[wc统计详解]]></title>
    <url>%2F2019%2F09%2F15%2Fwc%E7%BB%9F%E8%AE%A1%E8%AF%A6%E8%A7%A3.html</url>
    <content type="text"><![CDATA[linux当中经常会使用统计功能，当然有多种方法统计，本文详细的说说wc统计命令 123456789101112131415161718[root@backup scripts]# wc --help用法：wc [选项]... [文件]... 或：wc [选项]... --files0-from=FPrint newline, word, and byte counts for each FILE, and a total line ifmore than one FILE is specified. With no FILE, or when FILE is -,read standard input. A word is a non-zero-length sequence of charactersdelimited by white space.The options below may be used to select which counts are printed, always inthe following order: newline, word, character, byte, maximum line length. -c, --bytes print the byte counts 打印字节数 -m, --chars print the character counts 打印字符数 -l, --lines print the newline counts 打印行数 --files0-from=文件 从指定文件读取以NUL 终止的名称，如果该文件被 指定为"-"则从标准输入读文件名 -L, --max-line-length 显示最长行的长度 -w, --words 显示单词计数 --help 显示此帮助信息并退出 --version 显示版本信息并退出 测试文档: 123456789101112[root@backup scripts]# cat&gt;1.txt&lt;&lt;EOF&gt; I am smart&gt; I have a dog&gt; we are friends&gt; ohhhhh enjoy it!!!!&gt; EOF[root@backup scripts]# cat 1.txt I am smart 10I have a dog 12we are friends 14ohhhhh enjoy it!!!! 19总字数应该为55 12345678910[root@backup scripts]# wc -c 1.txt #统计字节数59 1.txt[root@backup scripts]# wc -m 1.txt #统计字符数59 1.txt[root@backup scripts]# wc -l 1.txt #统计行数4 1.txt[root@backup scripts]# wc -L 1.txt #统计最长行数的字数长度19 1.txt[root@backup scripts]# wc -w 1.txt #统计单词数13 1.txt 但是实际字数统计的话应该为55，但是可以看到无论-c 还是 -m显示的都是59，这是为什么？ 其实是因为制表符的原因！ 所以其实这里可以看出，其实wc -L统计字数应该是最为精准的，但是只适用于 单行文件 或者是 变量（因为变量赋值一般都是一行）]]></content>
      <categories>
        <category>linux</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux的发展]]></title>
    <url>%2F2019%2F09%2F11%2F2.linux%E7%9A%84%E5%8F%91%E5%B1%95.html</url>
    <content type="text"><![CDATA[linux的发展十分迅捷 版本发展的时间线 从这个图上可以看出linux有多受人们喜爱以及发展的非常迅速 而我们往后的分享中呢，主要以Red Hat系列为主RedHat这个系列下面有主要的3个版本： 红帽企业版：RHEL，收费的 Fedora 社区版，免费，相当于测试版，有新的功能特性会优先加入fedora这个 系统中，让大家尝鲜、测试，约相当于小白鼠吧 CentOS 社区版，免费；之前有这么一群人，看不惯RHEL收费，而且费用很高，所以就把RHEL里有版权信息的东西都去掉以后重新打包在发布出来，但是这个社区由于各种考虑已经被红帽公司收购了，所以现在也是红帽公司旗下的产品，但依旧是免费 这三者都是红帽公司的系统，所以本质上来说，这3个系统并没有什么区别，也就是说，你学习其中一个系统，对于其他2个系统来说都是完全通用的；现在企业中用的较多的就是RHEL和CentOS，而由于RHEL是收费的，所以大部分互联网企业选择了CentOS；当然也有企业在使用别的操作系统的 由于红帽公司有一个比较权威的linux认证，所以我们这里选用贴近认证的红帽系列，主要是CentOS7版本为主，顺带会说说未来的新版本RHEL8.0，在2020年5月就会将8.0用作考试了 但是其实linux其原理都一样，所以当你学会了红帽系列的linux系统时，其实对别的系列的系统，例如Ubuntu系统也能很快的上手]]></content>
      <categories>
        <category>linux</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux是什么]]></title>
    <url>%2F2019%2F09%2F11%2F1.linux%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.html</url>
    <content type="text"><![CDATA[前言： ​ linux是什么？​ linux能干什么？​ 学linux做什么？ 后台使用系统统计网站：https://www.netcraft.com 例如： 博客园：https://www.cnblogs.com/zzzhbr/ 淘宝网：www.taobao.com 由此可以看出我们经常访问的网站，大多都是由linux作为底层操作系统来提供服务的；也就是 linux上安装web服务，然后web服务向我们提供我们想要看见的内容！ 所以如果你也想要自己建个博客网站或者购物网站，那么linux就是最基础的知识了； 还有就是例如电视上经常见到的那些电脑高手（黑客高手），总是手指飞快的在敲着，然后屏幕上一个黑框框上面一串串内容，飞速的运行着，像黑客帝国的代码雨；他们用的也基本上都是linux系统； 你知道想要在linux系统里 下代码雨有多容易吗？只需要cmatrix就能搞定了！！试试吧！ 学习linux，你可以明白： 为什么输入www.baidu.com就可以访问网站 为什么输入baidu.com会跳转到www.baidu.com 系统是怎么回事 黑客们是在做什么 打造属于自己的炫酷系统 网站是怎么给我提供服务的 网站的背后有哪些东西 搭建属于自己的网站 。。。当然linux也分为很多的方向：比如linux运维；应用运维，大数据运维，架构师，数据库，白帽子等等等等，但是说了这么多，可是都离不开linux！所以IT这个行业，linux已经算是必须的东西喽！无论是程序猿，网络攻城狮，测试攻城狮懂得linux对你的帮助是非常大的；所以无论是兴趣，找工作，还是想要装X，那么不妨一同进入linux的世界探寻探寻吧！]]></content>
      <categories>
        <category>linux</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在导入python(tab)模块时报错]]></title>
    <url>%2F2019%2F09%2F10%2F%E5%9C%A8%E5%AF%BC%E5%85%A5python%EF%BC%88tab%EF%BC%89%E6%A8%A1%E5%9D%97%E6%97%B6%E6%8A%A5%E9%94%99.html</url>
    <content type="text"><![CDATA[在导入python的模块时会报错： 配置文件：123456789101112131415#!/usr/bin/env python# python Tab fileimport sysimport readlineimport rlcompleterimport atexitimport osreadline.parse_and_bind('tab:complete')histfile = os.path.join(os.environ['HOME'], '.pythonhistory')try: readline.read_history_file(histfile)except IOError: passatexit.register(readline.write_history_file,histfile)del os,histfile, readline, rlcompleter 直接在crt操作复制进tab.py不成功，会各种报错:提示line1，line2之类的那是因为在复制进去的时候有些字符被更改了 解决办法： 1.yum install lrzsz （安装上传下载软件） 2.在电脑上新建一个名为tab.txt的文件,然后将配置内容复制进去；保存，修改tab.txt为tab.py 3.rz（上传命令） 4.在调出来的文件框里选择刚刚创建的tab.py 5.whereis python（查看python模块放在那个文件夹下）python: /usr/bin/python /usr/bin/python2.6 /usr/lib/python2.6 /usr/lib64/python2.6 /usr/include/python2.6 /usr/share/man/man1/python.1.gz （跳出好多个目录，有些是文件不是目录，不清楚模块在哪个目录下的可以cd切进去看看） 6.cp tab.py /usr/lib64/python2.6（将刚刚上传的tab.py文件拷贝到python模块目录下） 7.python（进入python）然后输入import tab.py（导入tab模块）即可]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vmware安装ubuntu18.10时出现显示不全问题]]></title>
    <url>%2F2019%2F09%2F10%2Fvmware15pro%E5%AE%89%E8%A3%85ubuntu18.10%E6%97%B6%E5%87%BA%E7%8E%B0%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%85%A8%E9%97%AE%E9%A2%98.html</url>
    <content type="text"><![CDATA[有时候会碰到vmware安装ubuntu18.10的时候出现显示不全的问题 如果这个时候用网上的ALT+左键拖拽根本没有效果 所以这里提供另外一种方式 就是正常安装的时候发现分区部分显示不全 此时点击右上角的橙色小×；询问是否退出 我们点击退出；之后就会来到试用界面 到了这里我们就可以手动更改分辨率了； 右键更改背景====&gt;设备====&gt;分辨率 然后我们可以点击安装ubuntu18.10 就可以正常操作了]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win右键菜单添加程序]]></title>
    <url>%2F2019%2F09%2F09%2Fwin%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B7%BB%E5%8A%A0%E7%A8%8B%E5%BA%8F.html</url>
    <content type="text"><![CDATA[windows右键菜单添加新的程序 比如我想将XShell添加到右键菜单上面，能够更快速的打开 这里是利用修改注册表的方式： 按下win+r输入regedit然后找到HKEY_CLASSES_ROOT下面的Directory下面的Background里的shell;在shell下右键添加项，这里比如我添加的是xshell，然后在新建的这个xshell下再新建项，比如我命名的是command，然后点击command，在右边的窗口双击，在数据数值里添加程序的绝对路径 然后就能在右键菜单里找到我们新加的程序了]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>win</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阅读书单]]></title>
    <url>%2F2019%2F09%2F09%2F%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95.html</url>
    <content type="text"><![CDATA[这是一个阅读书单 接下去的阅读计划，进度可能及其缓慢！ 想创业？读这17本书就够了《商业冒险》（Business Adventures）《人生如创业》（The Start-Up Of You）《女孩老板》(Girlboss）《重塑工作》（Rework）《失去童贞：我如何生存、享乐并依靠自己的生意经发大财》(Losing My Virginity: HowI’ve Survived, Had Fun, and Made a Fortune Doing Business My Way)《人性的弱点》（How To Win Friends And Influence People）《锯齿原则》(The Zigzag Principle)《如何在商业竞技中取胜》(How to Win at the Sport of Business)《压力测试:关于金融危机的思考》(Stress Test: Reflections on Financial Crises)《风险投资游戏》（The Startup Game）《货币崛起:金融如何影响世界历史》(The Ascent of Money:A Financial History of theWorld)《精益创业》(The Lean Startup)《信号与噪音》(the Signal and the Noise)《如此优秀,谁能埋没你:职业技能如何完胜激情》(So Good They Can’t Ignore You: WhySkills Trump Passion in the Quest for Work You Love）《传递幸福》（Delivering Happiness）《像艺术家一样去盗取灵感》（Steal Like an Artist） 豆瓣高评分书籍 原则 薛兆丰经济学讲义 心流：最优体验心理学 跃迁：成为高手的技术 有效学习 规模：复杂世界的简单法则 心理学相关 蔡格尼克效应 深度思维 极简思考术 趋势 风口 各种模型 影响力 理解人性 阿德勒 人性的弱点 卡耐基 社会心理学 戴维·迈尔斯 国学 鬼谷子 曾国潘等 马斯洛需求理论 六顶思考帽 思维 非暴力沟通]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>书单</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安利好用的工具及软件之（一）]]></title>
    <url>%2F2019%2F09%2F09%2F%E5%AE%89%E5%88%A9%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8F%8A%E8%BD%AF%E4%BB%B6%E4%B9%8B%EF%BC%88%E4%B8%80%EF%BC%89.html</url>
    <content type="text"><![CDATA[安利好用的笔记类软件安利 No.1 思维导图笔记幕布 以下部分摘自官方介绍： 幕布是什么 幕布是一款以层级折叠式文字来整理内容的大纲文档工具，用更高效的方式和更清晰的结构来记录笔记、管理任务、制定计划等，同时支持一键生成思维导图 幕布能用来做什么 幕布可以是一个传统的文档工具，用来做读书笔记、会议记录和内容创作等 幕布可以是一个清单工具，管理你的日程、待办事项、购物清单等 幕布也是一个思维导图工具，方便地进行思维整理 幕布还可以创建协作邀请，随时随地进行团队协作 幕布支持全平台📱 🖥 💻 网页版：mubu.com PC &amp; Mac 桌面版：https://mubu.com/apps iOS &amp; Android 手机 App：https://mubu.com/app-dl 你还可以在幕布的微信公众号“幕布”（mubuio）里直接使用微信版幕布 微信扫一扫就能看到更多的介绍 或者点击幕布 幕布免费or收费？ 账号注册是免费的，可以使用幕布的所有核心功能，满足基本需求 文档主题数量200条 思维导图模式 演示模式 同时也有高级版账户 文档主题数量无限制 思维导图模式 演示模式 插入图片 文档高级样式 思维导图高级风格 高级导出（OPML、思维导图） 这里提供几条可以免费撸幕布会员的途径（可叠加）截止2019-9-4时可用： 如果没有账号的先注册：推荐地址：https://mubu.com/inv/4264303用这个你可以免费获得vip时长1个月 Foto赠送31天高级版：https://mubu.com/vip_present/Fotor12 媒想到30天高级版：https://mubu.com/vip_present/mxd20190827 国才考试 &amp; 幕布60天高级版：https://mubu.com/vip_present/GuoCaiTest 幕布 &amp; 当当30天高级版：https://mubu.com/vip_present/dangdang 新增7天幕布会员高级版！没注册过的先注册！https://mubu.com/vip_present/fxfl201909 如果碰到失效，无参数，请求上限的话请换码再试如有新增会加上如果嫌麻烦，可以万能XX上面有便宜的其实要不要会员请理性对待 No.2 思维导图软件头脑风暴是现在很流行的名词，思维导图就是进行一场头脑风暴的记录；这里我常用的是Xmind以及Mindjet MindManager了，当然还有其他的，但是这里主要说说这2款 Xmind pro还是Mindjet MindManager 中国特供版？以下简称 Xmind 和 Mindjet MindManager 比对项目 xmind Mindjet MindManager 费用 收费 收费 WIN 支持 支持 MacOS 支持 支持 移动 支持 不支持（2019-08-09发布通告说推出，但网站上没有下载地址） Linux 支持 不支持 在使用过程中2款也就看各自的习惯了，也都算是差不多的，图表图片风格的话个人更偏向于Xmind（再次强调是我个人偏向…） 这上面其实可以看出格式都是差不多的，office一脉都支持，不同点就是打开的格式支持上面Xmind约略胜一筹，他支持Mindjet格式（mmap）的打开，但是Mindjet不支持xmind格式的打开（注这里是中国特供版不支持，标准版可支持）；其次Mindjet有个特点就是支持导出Html5交互式的格式，不过交互式也还有别的格式，例如PPT啥的，所以如果不是特别追求HTMLL5的话，这里我想应当是Xmind略微胜一筹 原价价格是： Mindjet MindManager 标准版 998终身授权 = Mindjet MindManager 特供版 998终身授权？但是好像常有特价： Mindjet MindManager 标准版 498终身授权&gt; Mindjet MindManager 特供版 398终身授权这俩货的区别：http://www.mindmanager.cn/duibi.html XMind 8 Pro 原价￥899 特价￥699 XMind: ZEN &amp; 移动版258/6个月 388/年 该方案订阅可用于 2 台 Mac 或 PC，3台 iOS 或安卓设备。 该方案包含 XMind: ZEN 和 XMind 移动版。XMind 8 不包含在内。 综合考虑 Mindjet MindManager 标准版也支持xmind格式，而且价格是498终身，可能性价比更高些哟:full_moon_with_face:不过穷孩子在大天朝，你懂的:sun_with_face: No.3 富文本编辑器云笔记或许你都知道了，像有道云，印象笔记，石墨……等太多了，这里就不一一列举了；但是你是否在找好用的编辑器呢？ 能够有目录树，支持插入图片（复制黏贴），到来这里你或许会想到Ofiice大套件了，没错，Office套件你确实值得拥有，但是Word支持代码高亮有些麻烦，本身它并不支持代码高亮；所以这里就推荐一款集众家之所长的富文本编辑器CherryTree，下载地址：https://www.giuspen.com/cherrytree/#downlCherryTree是一款开源免费的强大的富文本编辑器（富文本不支持MD语法）支持中文 以下是摘自百度百科的简介： 一个支持无限层级分类的笔记软件，Python编写，支持富文本编辑和代码高亮，支持Linux和Windows平台。 有如下特征： 数据采用sqlite或XML存储，支持密码保护。 [1] 支持从NoteCase、KeepNote、Knowit、Tomboy、TuxCards、Treepad、Leo等笔记软件导入数据。 多语言支持，包括中文、英文、法文等。 富文本编辑（前景色，背景色，粗体，斜体，下划线，删除线，小，上标，下标，等宽等效果）。 语法高亮（仅在富文本编辑禁用时可以使用）。 图像处理：在文本中插入，编辑（调整大小/旋转），保存为png文件。 超链接支持：可以链接到网页、节点、文件、文件夹等。 表格支持：可以在文本中插入表格。 代码框支持：可以在文本中插入代码框。 pdf支持：可以把选中的节点或子节点输出为pdf格式。 支持输出为html格式或普通文本。 有技术人员专用笔记软件之美称呦！！ No.4 Markdown编辑器你一定听过Markdown，这已经是现在最流行的文本编辑器编写的标记语言了，几乎所有的写文章的平台都已经支持这种格式了，通过简单的标记语法，它可以使普通文本内容具有一定的格式。当然先在也有很多衍生版本，或基于工具，或基于网站，但是也无需太过担心，语法基本都是兼容的 tepora官网：https://www.typora.io/支持多平台：linux， macos， win 简洁免费 无缝实时预览 所见即所得 多种主题格式随心切换 代码高亮 多种的书写模式，让你更加专注于内容书写 但是是本地编辑器，想要做云同步略显麻烦 GitNote官网：https://www.gitnoteapp.com/zh/以下来自官方说明：GitNote 是永久免费的 GitNote 是永久免费的,会通过技术支持服务进行收费,具体请查看VIP服务说明 GitNote 是永久维护的 GitNote 是永久维护的,由于其他软件不满足我的使用,和安全性考虑,所有自己开发的,我也会自己一直开发维护下去的,以后也会做开源计划,不用担心无人维护下去. VIP 服务 GitNote 是永久免费,这里的VIP服务主要是提供技术服务支持. 服务内容 1: GitNote 临时文字发布 (10000 条)2: GitNote 文章收藏 (10000 条)3: 分享本人的技术知识,经验教训5: 分享最实用行业信息,技术内容6: 为VIP用户提供一对一定制化的学习路线7: 解决各种技术问题8: 提供程序员相关福利9: 为公司提供最佳的技术解决方案10: 提供各种需求的开发工作 GitNote VIP VIP的费用也是极低的：按年收费,一年30人民币.还有种定制收费：根据需求而定,肯定公道收费. 这款软件对比typora的优势就是基于Git，内置Git同步；而且支持富文本，脑图，流程图，Todo管理，markdown编辑，还有个人最喜欢的图床等功能 Git同步功能：官方推荐国内可食用gitee，国外食用github 图床功能：可以直接黏贴，拖拉自动上传 什么是图床？ 简单来说就是储存图片的服务器，当我们把图片上传到图床上就会得到一个链接，这个链接就是指向图片的；有了这个链接，我们就可以把图片放到任何写文章的平台上都不用担心图片丢失的问题 软件也及其简单易用，只要第一次使用时配置好Git同步服务器和图床服务器后就无需再配置了！ 担心不会用？ 不用担心，官方有提供视频：https://github.com/zhaopengme/gitnote 及文字说明：https://www.gitnoteapp.com/zh/docs/setup.html No.4 干净版百度首页如果有的朋友喜欢将百度设置为首页，又或者首页有着一大堆广告的，或者有和我一样平时浏览器用的是别的搜索引擎的朋友，有时候想用百度引擎，或者是喜欢输入百度网址然后再搜索的朋友，会发现，现在的百度各种新闻广告在首页，非常容易干扰，正常打开是这样 当然这是手机版本，电脑版的比较好办，不登录百度打开就是非常干净简洁的页面，又或者使用插件 手机版的就很不好办了，首页不管登录没登录都是杂七杂八一大堆，让人极其不爽，所以誓死要干掉；如果你懂得写屏蔽规则或许能干掉，但是难度系数略大；所以这里就推荐一个及其简单的方式：你只需要输入https://m.baidu.com/?tn=simple 并将其设置为书签，以后点它百度就可以了，有的浏览器支持主页书签的，那么添加个主页书签是个更好的选择；又或者你想要把一些浏览器自带的一大坨广告的主页干掉，设置成个干净的主页， 那么将 https://m.baidu.com/?tn=simple 设置为主页相信也是个很棒的选择 怎么样是不是觉得世界一下子清净了好多？！]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[堡垒机-jumpserver]]></title>
    <url>%2F2019%2F09%2F07%2F%E5%A0%A1%E5%9E%92%E6%9C%BA-jumpserver.html</url>
    <content type="text"><![CDATA[官方网站http://jumpserver.org Jumpserver 软件包环境要求：Python = 3.6.xMysql Server ≥ 5.6Mariadb Server ≥ 5.5.56Redis ** 生产环境部署建议部署 1.4.8 版本 ** 环境jumpserver服务端： 1234567891011121314[root@jumpserver ~]# cat /etc/redhat-release CentOS Linux release 7.4.1708 (Core) [root@jumpserver ~]# uname -r3.10.0-693.el7.x86_64[root@jumpserver ~]# uname -njumpserver[root@jumpserver ~]# uname -mx86_64[root@jumpserver ~]# ifconfig ens33 | grep &quot;inet &quot;|awk &apos;&#123;print $2&#125;&apos;10.0.0.161 jumpserver被管理端： 1234567891011121314[root@jumpserver-client ~]# cat /etc/redhat-release CentOS Linux release 7.4.1708 (Core) [root@jumpserver-client ~]# uname -r3.10.0-693.el7.x86_64[root@jumpserver-client ~]# uname -njumpserver-client[root@jumpserver-client ~]# uname -mx86_64[root@jumpserver-client ~]# ifconfig ens33 | grep &quot;inet &quot; | awk &apos;&#123; print $2&#125;&apos;10.0.0.162 准备所需软件： jumpserver： https://github.com/jumpserver/jumpserver luna： https://demo.jumpserver.org/download/luna coco： https://github.com/jumpserver/coco 12**在线下载代码方式： **git clone https://github.com/jumpserver/coco.git &amp;&amp; cd coco &amp;&amp; git python： wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz 手动本地jumpserver-服务端搭建初始化一些系统环境设置：1. 创建软件包放置目录：1[root@jumpserver ~]# mkdir /server/sources -p 将所需软件全部放在/server/sources/ 目录里 软件包打包下载： 链接：https://pan.baidu.com/s/1ZJzXrLnsXqsqIMkLjKbrIw提取码：be45复制这段内容后打开百度网盘手机App，操作更方便哦 1234[root@jumpserver ~]# cd /server/sources/[root@jumpserver sources]# lscoco luna.tar.gz Python-3.6.1.tar.xzjumpserver python-package 2. 关闭防火墙123456789101112[root@jumpserver sources]# systemctl stop firewalld[root@jumpserver sources]# systemctl disable firewalld [root@jumpserver sources]# systemctl status firewalld ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled) Active: inactive (dead) Docs: man:firewalld(1)[root@jumpserver sources]# systemctl status firewalld ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled) Active: inactive (dead) Docs: man:firewalld(1) 3. 关闭selinux123456[root@jumpserver sources]# setenforce 0[root@jumpserver sources]# getenforce只要显示Permissive或者Disabled就是成功将/etc/selinux/config配置文件里的SELINUX=enforcing改为SELINUX=disabled使其永久生效 4. 如果生产环境需要开启selinux和防火墙的情况下则使用(直接复制整段进命令行运行即可)：123echo -e &quot;\033[31m 1. 防火墙 Selinux 设置 \033[0m&quot; \&amp;&amp; if [ &quot;$(systemctl status firewalld | grep running)&quot; != &quot;&quot; ]; then firewall-cmd --zone=public --add-port=80/tcp --permanent; firewall-cmd --zone=public --add-port=2222/tcp --permanent; firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;172.17.0.0/16&quot; port protocol=&quot;tcp&quot; port=&quot;8080&quot; accept&quot;; firewall-cmd --reload; fi \&amp;&amp; if [ &quot;$(getenforce)&quot; != &quot;Disabled&quot; ]; then setsebool -P httpd_can_network_connect 1; fi 5. 配置中文环境（整段复制到命令行运行即可）：12345ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \&amp;&amp; yum -y install kde-l10n-Chinese \&amp;&amp; localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8 \&amp;&amp; export LC_ALL=zh_CN.UTF-8 \&amp;&amp; echo &apos;LANG=&quot;zh_CN.UTF-8&quot;&apos; &gt; /etc/locale.conf 重新登录命令行终端即可生效 安装相关软件依赖软件所需依赖软件: 123456789101112131415161718wget #下载；epel-release #扩展源；sqlite-devel #数据库；xz #解压；gcc #编译器；automake #编译相关；zlib-devel #压缩；openssl-devel #加密；git #git相关[root@jumpserver ~]# yum -y install wget epel-release sqlite-devel xz gcc automake zlib-devel openssl-devel epel-release git 编译安装python3.6.112345678910111213[root@jumpserver ~]# cd /server/sources/[root@jumpserver sources]# lscoco luna.tar.gz python-packagejumpserver Python-3.6.1.tar.xz[root@jumpserver sources]# ./configure &amp;&amp; make &amp;&amp; make install [root@jumpserver ~]# cd /server/sources/[root@jumpserver sources]# tar xf Python-3.6.1.tar.xz[root@jumpserver sources]# cd Python-3.6.1[root@jumpserver sources]# ./configure &amp;&amp; make -j 4 &amp;&amp; make install 使用 Python 虚拟环境（使多版本的python互不影响，共存）123456789[root@jumpserver Python-3.6.1]# cd /opt/ [root@jumpserver opt]# python3 -m venv py3 #在opt目录下创建一个py3的虚拟环境[root@jumpserver opt]# source /opt/py3/bin/activate easy_install-3.6 pythonactivate.csh pip python3activate.fish pip3 easy_install pip3.6 [root@jumpserver opt]# source /opt/py3/bin/activate(py3) [root@jumpserver opt]# #切换成功的，前面有一个(py3)标识 安装 Jumpserver这里用的版本是 Jumpserver 1.0.0 重新打开一个10.0.0.161的shell连接窗口（注意前面没有py3所以不是在python3的虚拟环境下运行） ①. 安装rpm依赖 123456[root@jumpserver ~]# cd /server/sources/jumpserver/requirements[root@jumpserver requirements]# cat rpm_requirements.txt libtiff-devel libjpeg-devel libzip-devel freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel sshpass openldap-devel mysql-devel libffi-devel openssh-clients[root@jumpserver requirements]# yum install -y `cat rpm_requirements.txt` ②. 安装 Python 库依赖 在之前的 (py3) [root@jumpserver ~]# 窗口下进行 确保是这样的提示状态： 1(py3) [root@jumpserver ~]# 如果不是请运行 1234567891011 [root@jumpserver ~]# source /opt/py3/bin/activate (py3) [root@jumpserver ~]# #进入py3虚拟环境(py3) [root@jumpserver ~]# pip -Vpip 9.0.1 from /opt/py3/lib/python3.6/site-packages (python 3.6)(py3) [root@jumpserver requirements]# cd /server/sources/jumpserver/requirements #pip在线安装(py3) [root@jumpserver ~]# pip install --upgrade pip -i https://mirrors.aliyun.com/pypi/simple/(py3) [root@jumpserver ~]# pip install -r /opt/jumpserver/requirements/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ ③. 安装 Redis, Jumpserver 使用 Redis 做 cache 和 celery broke （注意命令行的提示前缀；这里都不是py3虚拟环境） 123456[root@jumpserver requirements]# yum -y install redis[root@jumpserver requirements]# systemctl enable redisCreated symlink from /etc/systemd/system/multi-user.target.wants/redis.service to /usr/lib/systemd/system/redis.service.[root@jumpserver requirements]# systemctl start redis ④. 安装 MySQL 123[root@jumpserver requirements]# yum install mariadb mariadb-devel mariadb-server -y[root@jumpserver requirements]# systemctl enable mariadb;systemctl start mariadb ⑤. 建数据库 Jumpserver 并授权 123456789[root@jumpserver requirements]# mysqlMariaDB [(none)]&gt; create database jumpserver default charset &apos;utf8&apos;;MariaDB [(none)]&gt; grant all on jumpserver.* to &apos;jumpserver&apos;@&apos;127.0.0.1&apos; identified by &apos;123456&apos;;MariaDB [(none)]&gt; exit; ⑥. 改 Jumpserver 配置文件 将下载来的jumpserver移动到app目录下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116[root@jumpserver requirements]# mkdir -p /server/app[root@jumpserver requirements]# cd /server/app/[root@jumpserver app]# cp -r /server/sources/jumpserver/ .[root@jumpserver app]# lsjumpserver[root@jumpserver jumpserver]# cp config_example.py config.py[root@jumpserver jumpserver]# vim config.py #编辑class DevelopmentConfig(Config):这一段；因为默认使用该配置class DevelopmentConfig(Config): DEBUG = True DB_ENGINE = &apos;mysql&apos; DB_HOST = &apos;127.0.0.1&apos; DB_PORT = 3306 DB_USER = &apos;jumpserver&apos; DB_PASSWORD = &apos;123456&apos; DB_NAME = &apos;jumpserver&apos;最终效果：[root@jumpserver jumpserver]# cat config.py &quot;&quot;&quot; jumpserver.config ~~~~~~~~~~~~~~~~~ Jumpserver project setting file :copyright: (c) 2014-2017 by Jumpserver Team :license: GPL v2, see LICENSE for more details.&quot;&quot;&quot;import osBASE_DIR = os.path.dirname(os.path.abspath(__file__))class Config: # Use it to encrypt or decrypt data # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = os.environ.get(&apos;SECRET_KEY&apos;) or &apos;2vym+ky!997d5kkcc64mnz06y1mmui3lut#(^wd=%s_qj$1%x&apos; # Django security setting, if your disable debug model, you should setting that ALLOWED_HOSTS = [&apos;*&apos;] # Development env open this, when error occur display the full process track, Production disable it DEBUG = True # DEBUG, INFO, WARNING, ERROR, CRITICAL can set. See https://docs.djangoproject.com/en/1.10/topics/logging/ LOG_LEVEL = &apos;DEBUG&apos; LOG_DIR = os.path.join(BASE_DIR, &apos;logs&apos;) # Database setting, Support sqlite3, mysql, postgres .... # See https://docs.djangoproject.com/en/1.10/ref/settings/#databases # SQLite setting: DB_ENGINE = &apos;sqlite3&apos; DB_NAME = os.path.join(BASE_DIR, &apos;data&apos;, &apos;db.sqlite3&apos;) # MySQL or postgres setting like: # DB_ENGINE = &apos;mysql&apos; # DB_HOST = &apos;127.0.0.1&apos; # DB_PORT = 3306 # DB_USER = &apos;root&apos; # DB_PASSWORD = &apos;&apos; # DB_NAME = &apos;jumpserver&apos; # When Django start it will bind this host and port # ./manage.py runserver 127.0.0.1:8080 HTTP_BIND_HOST = &apos;0.0.0.0&apos; HTTP_LISTEN_PORT = 8080 # Use Redis as broker for celery and web socket REDIS_HOST = &apos;127.0.0.1&apos; REDIS_PORT = 6379 REDIS_PASSWORD = &apos;&apos; BROKER_URL = &apos;redis://%(password)s%(host)s:%(port)s/3&apos; % &#123; &apos;password&apos;: REDIS_PASSWORD, &apos;host&apos;: REDIS_HOST, &apos;port&apos;: REDIS_PORT, &#125; def __init__(self): pass def __getattr__(self, item): return None#class DevelopmentConfig(Config):# passclass DevelopmentConfig(Config): DEBUG = True DB_ENGINE = &apos;mysql&apos; DB_HOST = &apos;127.0.0.1&apos; DB_PORT = 3306 DB_USER = &apos;jumpserver&apos; DB_PASSWORD = &apos;123456&apos; DB_NAME = &apos;jumpserver&apos;class TestConfig(Config): passclass ProductionConfig(Config): pass# Default using Config settings, you can write if/else for different envconfig = DevelopmentConfig() ⑦. 数据库表结构和初始化数据 (py3)虚拟环境下进行；且确保之前的pip已经安装完成了 123(py3) [root@jumpserver jumpserver]# cd /server/app/jumpserver/utils(py3) [root@jumpserver utils]# bash make_migrations.sh ⑧. 运行jumpserver 12345(py3) [root@jumpserver utils]# cd /server/app/jumpserver/(py3) [root@jumpserver jumpserver]# chmod +x jms (py3) [root@jumpserver jumpserver]# ./jms start all -d #-d后台运行 jumpserver的使用方法：./jms start|stop|status|restart all ⑨. 访问测试 http://10.0.0.161:8080/ 默认 账号：admin 1密码：admin 安装 组件在web页面上点击web终端 会看到： Luna是单独部署的一个程序，你需要部署luna，coco，配置nginx做url分发, 如果你看到了这个页面，证明你访问的不是nginx监听的端口，祝你好运 所以接下来，我们安装luna和coco 安装coco**coco实现了 SSH Server 和 Web Terminal Server 的组件，提供 SSH 和 WebSocket 接口, 使用 Paramiko 和 Flask 开发** 12345678910111213141516(py3) [root@jumpserver coco]# cd /server/sources/coco/requirements/(py3) [root@jumpserver requirements]# yum install `cat rpm_requirements.txt`(py3) [root@jumpserver requirements]# pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/(py3) [root@jumpserver requirements]# cp -r /server/sources/coco/ /server/app/(py3) [root@jumpserver requirements]# cd /server/app/coco/(py3) [root@jumpserver coco]# cp conf_example.py conf.py(py3) [root@jumpserver coco]# chmod +x cocod (py3) [root@jumpserver coco]# ./cocod start -dStart coco process 使用方法：./cocod start|stop|status|restart 安装Web-Terminal前端-Luna组件Luna概述：Luna现在是 Web Terminal 前端，计划前端页面都由该项目提供，Jumpserver 只提供 API，不再负责后台渲染html等 12345(py3) [root@jumpserver coco]# cd /server/sources/(py3) [root@jumpserver sources]# tar xf luna.tar.gz (py3) [root@jumpserver sources]# cp -r luna /server/app/ 配置Nginx整合各组件1234(py3) [root@jumpserver sources]# yum -y install nginx(py3) [root@jumpserver sources]# vim /etc/nginx/^Cinx.conf将原先的server&#123;&#125; 段全部替换掉 ** 最终的结果如下：** 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748(py3) [root@jumpserver nginx]# grep -Ev &quot;#|^$&quot; /etc/nginx/nginx.confuser nginx;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;include /usr/share/nginx/modules/*.conf;events &#123; worker_connections 1024;&#125;http &#123; log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; include /etc/nginx/conf.d/*.conf;server &#123; listen 80; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; location /luna/ &#123; try_files $uri / /index.html; alias /server/app/luna/; &#125; location /media/ &#123; add_header Content-Encoding gzip; root /server/app/jumpserver/data/; &#125; location /static/ &#123; root /server/app/jumpserver/data/; &#125; location /socket.io/ &#123; proxy_buffering off; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;upgrade&quot;; &#125; location / &#123; &#125;&#125;&#125; 语法检查 123(py3) [root@jumpserver sources]# nginx -tnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successful 运行 Nginx 1234(py3) [root@jumpserver nginx]# systemctl start nginx (py3) [root@jumpserver nginx]# systemctl enable nginx Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service. 在web页面上点击 默认信息，确认即可 服务器命令行终端测试： 123456789101112131415161718(py3) [root@jumpserver nginx]# ssh -p2222 admin@10.0.0.161The authenticity of host &apos;[10.0.0.161]:2222 ([10.0.0.161]:2222)&apos; can&apos;t be established.RSA key fingerprint is SHA256:8MCnHK0t1yfaxyf6fFq1e93fE9JDBc4hG00OlnWelXY.RSA key fingerprint is MD5:b5:6d:74:d6:00:90:f4:93:8f:b8:de:33:14:ea:6b:ee.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added &apos;[10.0.0.161]:2222&apos; (RSA) to the list of known hosts.admin@10.0.0.161&apos;s password: #填写admin的密码admin Administrator, 欢迎使用Jumpserver开源跳板机系统 1) 输入 ID 直接登录 或 输入部分 IP,主机名,备注 进行搜索登录(如果唯一). 2) 输入 / + IP, 主机名 or 备注 搜索. 如: /ip 3) 输入 P/p 显示您有权限的主机. 4) 输入 G/g 显示您有权限的主机组. 5) 输入 G/g + 组ID 显示该组下主机. 如: g1 6) 输入 H/h 帮助. 0) 输入 Q/q 退出. 用10.0.0.161就可以直接访问了，不需要再加8080 到此安装成功]]></content>
      <categories>
        <category>linux</category>
        <category>server</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客折腾记]]></title>
    <url>%2F2019%2F09%2F07%2F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E8%AE%B0.html</url>
    <content type="text"><![CDATA[前言：现在博客网站极多，但是是不是总感觉有些地方不满意？又或者看到有些人的博客感觉做的很漂亮，那他们又是怎么做的呢？ 首先说说本站是利用gitpages+hexo框架搭建而成 优点： 不需要懂的编程，哪怕是HTML，CSS，JS都不懂的人都能做的静态博客网站完全免费：利用Gitpage发布网站，还支持自定义域名（域名就需要购买了）嗯，我也是都不懂，就这么搭建起来喽！ ~(｡≧3≦)ﾉ⌒☆ 缺点： 静态网站百度SEO较差访问略慢 不过谁叫咱一穷二白呢，不光可以用此来练手，最重要的就是免费免费免费，无烦人广告无烦人广告无烦人广告； 不不不，绝对绝对绝对就是用来学习技术的，我才不会承认别的呢 只要gitpage不倒，网站就不会消失粗体，除非哪天你自己删了 so just enjoy it!!! 准备工作：0.一台能上网的电脑（这里以win为演示） 下载nodejs 下载Git HEXO HEXO的主题，这里我选用的是NexT主题，简洁大气 nodejs和Git就官网上下载好一键安装即可，一直无脑下一步下一步直到完成! HEXO的安装 更加具体的文档可以参考官方的：https://hexo.io/zh-cn/docs/index.html 如果输入npm install -g hexo-cli遇到以下报错 12npm should be run outside of the node repl, in your normal shell.(Press Control-D to exit.) 在自己的硬盘下创建一个目录，最好不要有中文路径，我在E盘创建了个Myblog目录然后进入E:\Myblog这个目录里，按住shift再右键点击打开在此处打开命令行终端 这里的意思是命令行在E:\Myblog这个目录里运行，同打开cmd然后cd切换到Mylog下面一样的效果为了方便以后就会说在E:\Myblog目录下打开命令终端（请注意：其实几乎后面所有的命令行操作都是在这个目录下运行的） 然后输入命令 1234561. npm install -g express2. npm install hexo-cli -g3. hexo init blog4. cd blog5. npm install6. hexo server 此时在E:\Myblog下又多了个blog目录，进去后显示 12345678.├── _config.yml #网站的 配置 信息，您可以在此配置大部分的参数├── package.json #应用程序的信息├── scaffolds #模版 文件夹├── source #资源文件夹| ├── _drafts| └── _posts└── themes 其实到这里你的网站框架已经搭建完成了，不信？那你就E:\Myblog\blog\目录下运行命令测试下呗 123hexo clean hexo ghexo s 然后出现 http://localhost:4000你在浏览器上访问就能看到生成的网站了上面3条命令的意思就是清空，生成，运行，更加详细的说明介绍请看官方文档，多看看总不会错的！ 美化博客接下去的步骤就都是为了美化博客而做的了 NexT的安装在命令行下（注意此处依旧是在E:\Myblog这个目录里的命令行）输入 1git clone https://github.com/theme-next/hexo-theme-next themes/next 看到E:\Myblog多了个themes目录，点进去看发现就是叫next，将next整个目录移动到E:\Myblog\blog\themes\下；原先E:\Myblog\blog\themes\有个landscape原来的E:\Myblog多出来的themes就可以删掉了，避免弄错 概念梳理首先就是先梳理下目录这里整篇文章的 目录 = 文件夹 然后到这里目录的情况就是这样的了 123456789`E:\Myblog\blog`是主目录，也称为根目录根目录下有个_config.yml ；大家的叫法多样 主配置文件/根配置文件/站点配置文件 （有时候真的是会傻傻分不清，他们说的究竟是哪个的）~~`E:\Myblog\blog\theme`是主题目录 因为主要是配置他下面的主题内容，所以这个目录可以忘记~~`E:\Myblog\blog\theme\next`是我们主要配置的主题 ，大家通常的叫法就是 主题目录这里也有个_config.yml ；但是请记得这是主题配置文件所以这里就有2个同名_config.yml ，这2个一定要区分好 然后编辑E:\Myblog\blog的主配置文件_config.yml 1将原先的theme: landscape改为theme: next 保存后可以来预览下效果在E:\Myblog\blog\打开终端输入 12345hexo cleanhexo ghexo s看到 INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.就证明成功，然后访问http://localhost:4000就能看到效果 坑1?用hexo加载next主题，所以 主配置，根目录下：HEXO的主配置文件E:\Myblog\blog\_config.yml 主题配置：Next主题的主配置文件E:\Myblog\blog\themes\next\_config.yml 这里因为网上资料比较多，因为查阅过得实在太多，而且好多内容也都是重复的，当时也没有记录下来，所以地址也就贴不出来了可以搜索下，大概的关键词就是hexo gitpage搭建博客hexo搭建博客hexo美化next美化hexo博客next博客等等吧，反正就是这几个关键词，随意组合组合就行next和hexo官方的文档建议要看下 调试不需要你没修改一次就去敲一次 123hexo clean hexo ghexo s 这个是动态的，你配置文件修改好，去浏览器强制刷新（ctrl + F5）就可以出效果了如果出现不了页面，就去命令行看看是不是因为修改配置缓存问题，所以强制关闭了（相信你也会经常碰到的），只要你去命令行看到的不是一直在等待状态的就重新运行下hexo s就可以了 注：不是一直在等待状态，就是最后一行有 E:\Myblog\blog&gt; 可以输入命令的状态 还有就是所有的配置文件，你要添加内容的时候，记得一定要先加个空格比如:后面要有个空格再填内容才会生效 坑2?NEXT和HEXO的版本不一样，所以有的写法可能不适用，出不来效果，或者干脆出错，所以记得及时备份呀，如果更改了很多效果之后，然后碰到个报错要重新来过心很凉，很奔溃的…… 如果出错了但是又排查不出问题，咋整啊？简单粗暴点，就是先把所有都关掉，然后把Myblog一整个删除，接着从 HEXO的安装 那步开始重新开始做 N多次的我，不要笑，你也会遇到的 话说我为什么要用NEXT7.4的版本啊，o(╥﹏╥)o ，好多都不一样了；对了，next有4个样式 Muse Mist Pisces Gemini 不同样式他的配置有时候得到的效果也不一样！ 坑3??（这里我已经忘记了为什么当时我会记录下这玩意儿了，可能不是坑，也可能是因为Mist样式的原因才记录） 如果想要文章目录自动展开，在E:\Myblog\blog\themes\next\source\css\_custom\custom.styl后面添加上 12//文章目录默认展开.post-toc .nav .nav-child &#123; display: block; &#125; 不想在目录上看到自动添加序号,修改E:\Myblog\blog\themes\next\_config.yml 1number: true 改为 number: false 坑4?如果你按照网上的教程家里打赏后，会发现打赏旋转比较鬼畜，然后的解决方法无效，如果网上的无效不凡试试这个，（如果你是看我的教程下载安装的next，那么我大概相信你会用到的。。。因为是7.4呀）因为配置语法和之前的不同了，关键就是旋转时间：慢了大概就不鬼畜了主要的就是修改语句： animation: roll .5s infinite linear;.5s这个就是时间，这是我修改后的时间 修改配置文件：themes/next/source/css/_common/components/post/post-reward.styl 1234if (hexo-config(&apos;reward_settings.animation&apos;)) &#123; &gt; div:hover p &#123; animation: roll .5s infinite linear; &#125; 坑5?底部标签的样式，就是把#号替换，网上都是清一色 修改/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成搜索rel=”tag”&gt;# 根本没有结果，没办法呀，再瞅瞅查查呗，无果，最后只要发挥我的主观能动性，肯定是这个文件，那就慢慢看看哪里有#，改了效果咋样呗 最后：改成搜索rel=”tag”得到结果 1&lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; 然后我往上看有个#诶， 12345678910111213&lt;footer class=&quot;post-footer&quot;&gt; &#123;%- if post.tags and post.tags.length %&#125; &#123;%- if theme.tag_icon %&#125; &#123;%- set tag_indicate = &apos;&lt;i class=&quot;fa fa-flag&quot;&gt;&lt;/i&gt;&apos; %&#125; &#123;% else %&#125; &#123;%- set tag_indicate = &apos;#&apos; %&#125; &#123;%- endif %&#125; &lt;div class=&quot;post-tags&quot;&gt; &#123;%- for tag in post.tags %&#125; &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;%- endfor %&#125; &lt;/div&gt; &#123;%- endif %&#125; 把#替换掉就行&lt;i class=&quot;fa fa-flag&quot;&gt;&lt;/i&gt;我试了很久才发现这原来是个固定语法 只有flag`是可以替换的这个样式效果可以去fontawesome因为官方文档里有说，图标都是用的这个网站上的，挑个自己喜欢的就行 坑6?博客上添加音乐之前看到一个效果就是我现在博客上的音乐插件这样的效果，可是都做不出效果，这里也是坑了好久，首先说下，调用的还是Aplayer这个第三方插件，播放器是网易云音乐的，但是这个插件要用url：XXXXXXX.mp3的外链模式，不能直接调用网易云音乐库（或者是我不知道怎么调用？），所以我这里就直接提供源码（和原Aplayer有些不一样，有更改）可以直接就用网易云的ID，调用网易云的外量播放器直接放，如果你链接的网易云曲库更新了，这边也会同步更新，但是有延迟 这里也算是参考结合了网上给出的方案总结出的新方法（毕竟不懂，把这弄出来，那个开心啊） 下载文件在\themes\next\source\下新建一个dist文件（名字其实随意，主要就是接下去的调用的时候要根据你的名字来更改，所以这里就以dist来做） 然后修改\themes\next\layout\的_layout.swig文件，然后在结束标签之前加上 1234&lt;link rel=&quot;stylesheet&quot; href=&quot;/dist/APlayer.min.css&quot;&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;&lt;div id=&quot;aplayer&quot; class=&quot;aplayer&quot; data-id=&quot;2889986160&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-fixed=&quot;true&quot; data-listfolded=&quot;true&quot; data-order=&quot;random&quot; data-theme=&quot;#F58EA8&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/Meting.min.js&quot;&gt;&lt;/script&gt; 我加的位置是 12345 &#123;%- if theme.pjax %&#125; &lt;/div&gt; &#123;%- endif %&#125;&lt;/body&gt;&lt;/html&gt; 就这段的上面，也就是倒数5行之上]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git+hexo打造属于你的网站]]></title>
    <url>%2F2019%2F09%2F07%2Fgit%2Bhexo%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99.html</url>
    <content type="text"><![CDATA[基础介绍是不是觉得现在的博客五花八门，但又感觉没有适合自己的。 直到HEXO；Jekyll等的出现；可以和github结合起来就可以打造属于自己的博客了！而且是免费的哦！！！ 建议新手先可以先选用hexo；有些基础了再来玩Jeklly。 hexo是基于Node.js的静态博客程序；所以搭建过程或许你会觉得比jeklly繁琐些，但是相信我，配置修改等高度DIY的东西会让你累觉不爱的！ 下面开始DIY之旅吧 环境准备0. github首先注册个github的账号 直接正常注册就好 接着在右上角有个+号，点击+ New reposition 新建一个仓库 这个Repository name必须是：用户名.github.io （这里的用户名用你的github账号名） 例如我的就是zzzhbr.github.io 加下去Description (optional)可以根据你自己的想法写（也可不写） public Initialize this repository with a README这个也可以勾上 create repository 就行 这个README是md文档；可以根据自己的想法写；比如就简单的介绍一下是个仓库干嘛的就行 1. 安装Node.js首先到Node.js的官网上下载平台 新版本直接下载就行了；我下的是当下最新版：10.16.0LTS 这个安装过程就很简单了；双击运行node-v10.16.0-x64.msi；然后一直下一步操作即可 win+r 输入cmd，输入node -v检查下是否安装成功 12C:\Users\zzz&gt;node -vv10.16.0 2.安装Git简单来说Git是开源的分布式版本控制系统 我们在本地先搭建博客，然后用git同步到github上面去 到官网上去下载git 我下载的依然是当下最新的2.22.0 64-bit 也是双击Git-2.22.0-64-bit.exe直接安装即可 安装成功后，可以开始讲Git与GitHub帐号绑定，鼠标右击打开Git Bash 12git config --global user.name "你的GitHub用户名"git config --global user.email "你的GitHub注册邮箱" 生成SSH秘钥文件： 1ssh-keygen -t rsa -C "你的GitHub注册邮箱" 如果有交互直接回车就好（3次回车） 结束后仔细看结果会发现有秘钥存放的位置： Your identification has been saved in /c/Users/zzz/.ssh/id_rsa.Your public key has been saved in /c/Users/zzz/.ssh/id_rsa.pub. 打开文件夹 然后用记事本打开id_rsa.pub 这个文件就行 接着将里面的内容全部复制 点击你的头像————&gt;Settings————-&gt;SSH and GPG keys———-&gt;New SSH key Title是标题，任意填即可 Key框里黏贴上刚刚复制的内容；最后点击Add SSH key 在Git Bash中检测GitHub公钥设置是否成功，输入 1234567891011ssh git@github.com ：The authenticity of host 'github.com (13.229.188.59)' can't be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no/[fingerprint])? yes #第一次连接要手动输入yes出现Hi zzzhbr! You've successfully authenticated, but GitHub does not provide shell access.Connection to github.com closed.You've successfully authenticated 这个就代表成功 这里配置ssh-key的原因是如果以后用git推送的话，可以直接不用输入密码ssh连接上去，方便git推送到github上 安装hexoHexo就是我们的个人博客网站的框架 这里需要自己在电脑常里创建一个文件夹，可以命名为blog或其他自己想要的 Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击在此处打开命令窗口 注意以下的操作都是在blog的文件夹下进行 在blog文件夹下打开命令行，打开git bash here 命令行：在blog文件夹下shift+右键 在此处打开命令窗口 git bash here 就是git的命令行 在命令行使用命令安装Hexo 1npm install -g hexo-cli 这个安装时间较长耐心等待，安装完成后 在blog这个文件夹里右键git bash here输入： 1234hexo init #可以将 blog 文件夹初始化成一个博客文件夹npm install #安装依赖包 如果出现错误： 123npm WARN babel-eslint@10.0.2 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;) 在命令行输入 12npm install lodashnpm install eslint@^4.12.1 为了检测我们的网站雏形，分别按顺序输入以下命令： 1234hexo g# 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。hexo s# 将生成的网页放在了本地。，输入完成后就可以测试了 打开浏览器输入地址： localhost:4000 可以看到我们的网站了，并且有个Hello World 的文章 回到我们打开的git bash 按ctrl+c 停止本地博客 再去强制刷新页面（ctrl+F5）就会发现无法访问了 发布到github上刚刚我们的操作只是在本地上可以使用，但是不能让广大网友看见，所以我们接下来就要将他部署到github上面去 在blog的根目录下有个_config.yml 这是站点配置文件 翻到最后面 12345678#将原先的deploy: type:#更改成deploy: type: git repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git branch: master 参考如下： 1234deploy: type: git repo: https://github.com/zzzhbr/zzzhbr.github.io.git branch: master 保存站点配置文件；这一步就是让hexo知道你要把blog部署在github仓库上 最后安装git部署插件(在命令行部署) 1npm install hexo-deployer-git --save 如果出现错误 1npm WARN ajv-keywords@3.4.1 requires a peer of ajv@^6.9.1 but none is installed. You must install peer dependencies yourself. 解决： 1npm install ajv@^6.9.1 然后在git bash here上，我们分别输入三条命令： 1234hexo clean hexo g hexo d跳出github的登录页面，登录即可 其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。 完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 https://zzzhbr.github.io 就是_config.yml配置里的那段repo: https://github.com/zzzhbr/zzzhbr.github.io.git 取最后的那个部分zzzhbr.github.io.git将git去掉就行 然后就会惊奇的发现网站已经搭建完成了 后记之所以用命令行来执行npm的相关命令是因为能看见详细信息 这是最简单的hexo默认主题搭建的；如果需要美化，请到hexo官网下载好看的主题或自己编写！ 如果hexo官网找到自己喜欢的主题，请根据主题的直到说明进行操作即可！ 最后 enjoy it！！！ 下载主题配置示例]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[xmind双击文件无法打开及破解大法]]></title>
    <url>%2F2019%2F09%2F02%2Fxmind%E5%8F%8C%E5%87%BB%E6%97%A0%E6%95%88.html</url>
    <content type="text"><![CDATA[之前遇到过双击xmind文件无法打开，直接拖拽打开的方式也不行 现记录下解决方法 猜测： PJ大法里的Jar文件里的路径有问题 解决方法一：修改路径（未测试） 解决方法二：重装大法 ​ 但是之前经常会有PJ失效的情况发生，然后就是双击文件无法打开 终极解决：换PJ方法 操作步骤：1、用记事本打开C:\Windows\System32\drivers\etc\hosts 文件（按照默认路径安装）。2、将0.0.0.0 www.xmind.net 复制粘贴到最后一行，保存。3、把 XMindCrack.jar 放入C:\Program Files (x86)\XMind 文件夹内（这是Xmind软件的根目录），并解压。4、把 XMindCrack.jar 复制到 D 盘根目录。4、复制C:\Program Files (x86)\XMind 文件夹内的XMind.ini至桌面，使用记事本打开，增加一行“-javaagent:D:/XMindCrack.jar”（引号内的内容，引号无需复制），保存后将文件重新拖拽或者复制到 Xmind 的安装目录；6、右键管理员运行Xmind.exe 进到界面后点击【帮助】-&gt;【序列号】7、输入自己的邮箱号，输入序列号XAka34A2rVRYJ4XBIU35UZMUEEF64CMMIYZCK2FZZUQNODEKUHGJLFMSLIQMQUCUBXRENLK6NZL37JXP4PZXQFILMQ2RG5R7G4QNDO3PSOEUBOCDRYSSXZGRARV6MGA33TN2AMUBHEL4FXMWYTTJDEINJXUAV4BAYKBDCZQWVF3LWYXSDCXY546U3NBGOI3ZPAP2SO3CSQFNB7VVIY1234567890123458、好了，可以运行了！]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>xmind</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在移动硬盘安装系统]]></title>
    <url>%2F2019%2F07%2F28%2F%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F.html</url>
    <content type="text"><![CDATA[打造一个便携的随身携带的移动系统 [TOC] 方法一：准备工具 1、电脑（已经安装了Windows 7\8\10操作系统）一台 2、一个以上的移动硬盘 3、Windows 7\windows8\windows10 光盘或者镜像文件,只需要其中一个 4、imagex 微软的镜像部署工具 首先，我们把移动硬盘接到电脑上。 选择“磁盘管理” 注：不要选错硬盘，注意看硬盘容量大小和分区 在系统自带的磁盘管理里将要安装系统的硬盘分出一个用来装系统的区，分为主分区。建立好以后，接下来把新建的分区激活。选择刚刚建立好的分区，点击鼠标右键，选择“将分区标记为活动分区”这里用的是分区软件，软件的使用大致上都差不多如果这时候你的盘不能读写，显示的是这个样子，双击无法打开 右键属性，可用空间，已用空间都为0 那么就用系统自带的磁盘管理右键要操作的磁盘来删除卷，然后重新建立卷，格式化一下就会正常了 打开 Win10 光盘或者镜像，找到光盘目录下的“sources”目录，点击进入目录；找到“install.wim”文件，此文件为 Win10 的安装镜像文件 以管理员身份运行“命令提示符” 进入盘符 输入命令“imagex.exe /apply install.wim 1 i:\”， 这里的i:是指移动硬盘的盘符，根据自己的情况来写如果提示：不是内部或外部命令，也不是可运行的程序 就把imagex.exe的全路径写上例如，我下载的imagex.exe这个文件是在E:\文档\Compressed\imagex_downcc\imagex\这个里面 就可以将这整条写成：E:\文档\Compressed\imagex_downcc\imagex\imagex.exe /apply install.wim 1 i:\ 看见Successfully就是成功了 123[ 100% ] Applying progressSuccessfully applied image. 这时已经把Win10的安装文件写到硬盘上，但是还不能引导启动。所以我们还需要向移动硬盘上写入系统启动文件。 在命令提示符下输入“bcdboot i:\windows /s i:”，然后回车同样要注意这里的盘符 此时你的移动硬盘上就有内容了 在其他电脑上运行移动硬盘上的系统 第一次运行会安装部署系统，期间傻瓜式操作，按照提示操作即可 第二次就可以正常使用了 这里遇到了unknown filesystem的错误 总结:这里的应该是要再单独分一个活动分区出来100MB或450MB的那种隐藏活动分区，用来存放启动必需的文件因为如果是全部标识为活动分区就无法用命令E:\文档\Compressed\imagex_downcc\imagex\imagex.exe /apply install.wim 1 i:\拷贝文件了 方法二：WinToUSB最佳 Windows To Go 创建器帮助创建移动 Windows 10/8/7！使用说明官方文档：https://www.easyuefi.com/wintousb/faq/zh-CN/How-to-use-WinToUSB-ISO-To-USB.html 注：免费版不支持专业版，企业版等的安装 如果出现错误（API无法调用）之类不明显的，请确认权限； 软件用管理员权限运行 安全类软件（360，金山，防火墙之类的安防）看看是不是有拦截，最好都关闭再来操作 等待进度满了，可能有些慢，耐心等待会儿就好；看待100%以及安装成功字样就已经完成了，接下去就是进BIOS修改移动硬盘启动，然后初始化安装配置一下就可以了 打开我的电脑可以看出，这里软件自动分了2个区 打开磁盘管理工具，可以看出一个是100M的活动分区，一个就是用来装系统的主分区 所以软件在使用的时候，要注意好数据的备份，以及磁盘的选择，还有分区的选择，如果提前不做分区的话，容易全盘被格式化 总结：所以如果只是想将移动硬盘的一部分来安装系统的话，建议就提前在磁盘管理界面分好区 一个100M的隐藏活动分区， 一个用来装系统的分区 其余的就看你自己想要怎么分了然后安装的时候就细心点选盘和盘符]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>win</tag>
      </tags>
  </entry>
</search>
