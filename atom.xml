<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>25℃ Share Time</title>
  
  <subtitle>记录linux,python,自动化，阅读，小技巧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://e.coding.net/zzzhbr/"/>
  <updated>2019-09-06T06:11:23.609Z</updated>
  <id>https://e.coding.net/zzzhbr/</id>
  
  <author>
    <name>25℃</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://e.coding.net/zzzhbr/2019/09/06/hello-world/"/>
    <id>https://e.coding.net/zzzhbr/2019/09/06/hello-world/</id>
    <published>2019-09-06T06:05:14.795Z</published>
    <updated>2019-09-06T06:11:23.609Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>这是一个测试页面</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;p&gt;这是一个测试页面&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>堡垒机-jumpserver</title>
    <link href="https://e.coding.net/zzzhbr/2019/09/06/%E5%A0%A1%E5%9E%92%E6%9C%BA-jumpserver/"/>
    <id>https://e.coding.net/zzzhbr/2019/09/06/堡垒机-jumpserver/</id>
    <published>2019-09-06T06:05:14.795Z</published>
    <updated>2019-09-06T06:18:08.870Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><p><a href="http://jumpserver.org" target="_blank" rel="noopener">http://jumpserver.org</a></p><a id="more"></a><h2 id="Jumpserver-软件包环境要求："><a href="#Jumpserver-软件包环境要求：" class="headerlink" title="Jumpserver 软件包环境要求："></a>Jumpserver 软件包环境要求：</h2><p>Python = 3.6.x<br>Mysql Server ≥ 5.6<br>Mariadb Server ≥ 5.5.56<br>Redis</p><p>** 生产环境部署建议部署 1.4.8 版本 **</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><strong>jumpserver服务端：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver ~]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.4.1708 (Core) </span><br><span class="line"></span><br><span class="line">[root@jumpserver ~]# uname -r</span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line"></span><br><span class="line">[root@jumpserver ~]# uname -n</span><br><span class="line">jumpserver</span><br><span class="line"></span><br><span class="line">[root@jumpserver ~]# uname -m</span><br><span class="line">x86_64</span><br><span class="line"></span><br><span class="line">[root@jumpserver ~]# ifconfig ens33 | grep &quot;inet &quot;|awk &apos;&#123;print $2&#125;&apos;</span><br><span class="line">10.0.0.161</span><br></pre></td></tr></table></figure><p><strong>jumpserver被管理端：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver-client ~]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.4.1708 (Core) </span><br><span class="line"></span><br><span class="line">[root@jumpserver-client ~]# uname -r</span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line"></span><br><span class="line">[root@jumpserver-client ~]# uname -n</span><br><span class="line">jumpserver-client</span><br><span class="line"></span><br><span class="line">[root@jumpserver-client ~]# uname -m</span><br><span class="line">x86_64</span><br><span class="line"></span><br><span class="line">[root@jumpserver-client ~]# ifconfig ens33 | grep &quot;inet &quot; | awk &apos;&#123; print $2&#125;&apos;</span><br><span class="line">10.0.0.162</span><br></pre></td></tr></table></figure><p>准备所需软件：</p><p>jumpserver： <a href="https://github.com/jumpserver/jumpserver" target="_blank" rel="noopener">https://github.com/jumpserver/jumpserver</a></p><p>luna： <a href="https://demo.jumpserver.org/download/luna" target="_blank" rel="noopener">https://demo.jumpserver.org/download/luna</a></p><p>coco： <a href="https://github.com/jumpserver/coco" target="_blank" rel="noopener">https://github.com/jumpserver/coco</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**在线下载代码方式： **</span><br><span class="line">git clone https://github.com/jumpserver/coco.git &amp;&amp; cd coco &amp;&amp; git</span><br></pre></td></tr></table></figure><p>python： wget <a href="https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz</a></p><h2 id="手动本地jumpserver-服务端搭建"><a href="#手动本地jumpserver-服务端搭建" class="headerlink" title="手动本地jumpserver-服务端搭建"></a>手动本地jumpserver-服务端搭建</h2><h3 id="初始化一些系统环境设置："><a href="#初始化一些系统环境设置：" class="headerlink" title="初始化一些系统环境设置："></a>初始化一些系统环境设置：</h3><h4 id="1-创建软件包放置目录："><a href="#1-创建软件包放置目录：" class="headerlink" title="1. 创建软件包放置目录："></a>1. 创建软件包放置目录：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver ~]# mkdir /server/sources -p</span><br></pre></td></tr></table></figure><p>将所需软件全部放在/server/sources/ 目录里</p><p>软件包打包下载：</p><p>链接：<a href="https://pan.baidu.com/s/1ZJzXrLnsXqsqIMkLjKbrIw" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZJzXrLnsXqsqIMkLjKbrIw</a><br>提取码：be45<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver ~]# cd /server/sources/</span><br><span class="line">[root@jumpserver sources]# ls</span><br><span class="line">coco        luna.tar.gz   Python-3.6.1.tar.xz</span><br><span class="line">jumpserver  python-package</span><br></pre></td></tr></table></figure><h4 id="2-关闭防火墙"><a href="#2-关闭防火墙" class="headerlink" title="2. 关闭防火墙"></a>2. 关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver sources]# systemctl stop firewalld</span><br><span class="line">[root@jumpserver sources]# systemctl disable firewalld </span><br><span class="line">[root@jumpserver sources]# systemctl status firewalld </span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">[root@jumpserver sources]# systemctl status firewalld </span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br></pre></td></tr></table></figure><h4 id="3-关闭selinux"><a href="#3-关闭selinux" class="headerlink" title="3. 关闭selinux"></a>3. 关闭selinux</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver sources]# setenforce 0</span><br><span class="line">[root@jumpserver sources]# getenforce</span><br><span class="line">只要显示Permissive或者Disabled就是成功</span><br><span class="line"></span><br><span class="line">将/etc/selinux/config配置文件里的SELINUX=enforcing改为SELINUX=disabled</span><br><span class="line">使其永久生效</span><br></pre></td></tr></table></figure><h5 id="4-如果生产环境需要开启selinux和防火墙的情况下则使用-直接复制整段进命令行运行即可-："><a href="#4-如果生产环境需要开启selinux和防火墙的情况下则使用-直接复制整段进命令行运行即可-：" class="headerlink" title="4. 如果生产环境需要开启selinux和防火墙的情况下则使用(直接复制整段进命令行运行即可)："></a>4. <strong>如果生产环境需要开启selinux和防火墙的情况下则使用(直接复制整段进命令行运行即可)：</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;\033[31m 1. 防火墙 Selinux 设置 \033[0m&quot; \</span><br><span class="line">&amp;&amp; if [ &quot;$(systemctl status firewalld | grep running)&quot; != &quot;&quot; ]; then firewall-cmd --zone=public --add-port=80/tcp --permanent; firewall-cmd --zone=public --add-port=2222/tcp --permanent; firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;172.17.0.0/16&quot; port protocol=&quot;tcp&quot; port=&quot;8080&quot; accept&quot;; firewall-cmd --reload; fi \</span><br><span class="line">&amp;&amp; if [ &quot;$(getenforce)&quot; != &quot;Disabled&quot; ]; then setsebool -P httpd_can_network_connect 1; fi</span><br></pre></td></tr></table></figure><h4 id="5-配置中文环境（整段复制到命令行运行即可）："><a href="#5-配置中文环境（整段复制到命令行运行即可）：" class="headerlink" title="5. 配置中文环境（整段复制到命令行运行即可）："></a>5. 配置中文环境（整段复制到命令行运行即可）：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="line">&amp;&amp; yum -y install kde-l10n-Chinese \</span><br><span class="line">&amp;&amp; localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8 \</span><br><span class="line">&amp;&amp; export LC_ALL=zh_CN.UTF-8 \</span><br><span class="line">&amp;&amp; echo &apos;LANG=&quot;zh_CN.UTF-8&quot;&apos; &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure><p>重新登录命令行终端即可生效</p><h3 id="安装相关软件"><a href="#安装相关软件" class="headerlink" title="安装相关软件"></a>安装相关软件</h3><h4 id="依赖软件"><a href="#依赖软件" class="headerlink" title="依赖软件"></a>依赖软件</h4><p>所需依赖软件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">wget #下载；</span><br><span class="line"></span><br><span class="line">epel-release #扩展源；</span><br><span class="line"></span><br><span class="line">sqlite-devel #数据库；</span><br><span class="line"></span><br><span class="line">xz #解压；</span><br><span class="line"></span><br><span class="line">gcc #编译器；</span><br><span class="line"></span><br><span class="line">automake #编译相关；</span><br><span class="line"></span><br><span class="line">zlib-devel #压缩；</span><br><span class="line"></span><br><span class="line">openssl-devel #加密；</span><br><span class="line"></span><br><span class="line">git #git相关</span><br><span class="line">[root@jumpserver ~]# yum -y install wget epel-release sqlite-devel xz gcc automake zlib-devel openssl-devel epel-release git</span><br></pre></td></tr></table></figure><h4 id="编译安装python3-6-1"><a href="#编译安装python3-6-1" class="headerlink" title="编译安装python3.6.1"></a>编译安装python3.6.1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver ~]# cd /server/sources/</span><br><span class="line">[root@jumpserver sources]# ls</span><br><span class="line">coco        luna.tar.gz          python-package</span><br><span class="line">jumpserver  Python-3.6.1.tar.xz</span><br><span class="line">[root@jumpserver sources]# ./configure  &amp;&amp;  make  &amp;&amp; make install </span><br><span class="line"></span><br><span class="line">[root@jumpserver ~]# cd /server/sources/</span><br><span class="line"></span><br><span class="line">[root@jumpserver sources]# tar xf Python-3.6.1.tar.xz</span><br><span class="line"></span><br><span class="line">[root@jumpserver sources]# cd Python-3.6.1</span><br><span class="line"></span><br><span class="line">[root@jumpserver sources]# ./configure  &amp;&amp;  make  -j 4 &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="使用-Python-虚拟环境（使多版本的python互不影响，共存）"><a href="#使用-Python-虚拟环境（使多版本的python互不影响，共存）" class="headerlink" title="使用 Python 虚拟环境（使多版本的python互不影响，共存）"></a><strong>使用 Python 虚拟环境（使多版本的python互不影响，共存）</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver Python-3.6.1]# cd /opt/  </span><br><span class="line">[root@jumpserver opt]# python3 -m venv py3   #在opt目录下创建一个py3的虚拟环境</span><br><span class="line">[root@jumpserver opt]# source /opt/py3/bin/</span><br><span class="line">activate          easy_install-3.6  python</span><br><span class="line">activate.csh      pip               python3</span><br><span class="line">activate.fish     pip3              </span><br><span class="line">easy_install      pip3.6            </span><br><span class="line">[root@jumpserver opt]# source /opt/py3/bin/activate</span><br><span class="line">(py3) [root@jumpserver opt]#    #切换成功的，前面有一个(py3)标识</span><br></pre></td></tr></table></figure><h4 id="安装-Jumpserver"><a href="#安装-Jumpserver" class="headerlink" title="安装 Jumpserver"></a>安装 Jumpserver</h4><p>这里用的版本是 Jumpserver 1.0.0</p><p><strong>重新打开一个10.0.0.161的shell连接窗口（注意前面没有py3所以不是在python3的虚拟环境下运行）</strong></p><p>①. 安装rpm依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver ~]# cd /server/sources/jumpserver/requirements</span><br><span class="line"></span><br><span class="line">[root@jumpserver requirements]# cat rpm_requirements.txt </span><br><span class="line">libtiff-devel libjpeg-devel libzip-devel freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel sshpass openldap-devel mysql-devel libffi-devel openssh-clients</span><br><span class="line"></span><br><span class="line">[root@jumpserver requirements]# yum install -y `cat rpm_requirements.txt`</span><br></pre></td></tr></table></figure><p>②. 安装 Python 库依赖</p><p>在之前的 (py3) [root@jumpserver ~]# 窗口下进行</p><p>确保是这样的提示状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver ~]#</span><br></pre></td></tr></table></figure><p>如果不是请运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> [root@jumpserver ~]# source /opt/py3/bin/activate</span><br><span class="line"></span><br><span class="line"> (py3) [root@jumpserver ~]#    #进入py3虚拟环境</span><br><span class="line">(py3) [root@jumpserver ~]# pip -V</span><br><span class="line">pip 9.0.1 from /opt/py3/lib/python3.6/site-packages (python 3.6)</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver requirements]# cd /server/sources/jumpserver/requirements  #pip在线安装</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver ~]# pip install --upgrade pip  -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver ~]# pip install -r /opt/jumpserver/requirements/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><p>③. 安装 Redis, Jumpserver 使用 Redis 做 cache 和 celery broke</p><p>（注意命令行的提示前缀；这里都不是py3虚拟环境）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver requirements]# yum  -y install redis</span><br><span class="line"></span><br><span class="line">[root@jumpserver requirements]# systemctl enable redis</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/redis.service to /usr/lib/systemd/system/redis.service.</span><br><span class="line"></span><br><span class="line">[root@jumpserver requirements]# systemctl start redis</span><br></pre></td></tr></table></figure><p>④. 安装 MySQL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver requirements]# yum  install mariadb mariadb-devel mariadb-server   -y</span><br><span class="line"></span><br><span class="line">[root@jumpserver requirements]#  systemctl enable mariadb;systemctl start mariadb</span><br></pre></td></tr></table></figure><p>⑤. 建数据库 Jumpserver 并授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver requirements]# mysql</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database jumpserver default charset &apos;utf8&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all on jumpserver.* to &apos;jumpserver&apos;@&apos;127.0.0.1&apos; identified by &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; exit;</span><br></pre></td></tr></table></figure><p>⑥. 改 Jumpserver 配置文件</p><p>将下载来的jumpserver移动到app目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">[root@jumpserver requirements]# mkdir -p /server/app</span><br><span class="line"></span><br><span class="line">[root@jumpserver requirements]# cd /server/app/</span><br><span class="line"></span><br><span class="line">[root@jumpserver app]# cp -r /server/sources/jumpserver/ .</span><br><span class="line"></span><br><span class="line">[root@jumpserver app]# ls</span><br><span class="line">jumpserver</span><br><span class="line"></span><br><span class="line">[root@jumpserver jumpserver]#  cp config_example.py config.py</span><br><span class="line"></span><br><span class="line">[root@jumpserver jumpserver]# vim config.py  </span><br><span class="line"></span><br><span class="line">#编辑class DevelopmentConfig(Config):这一段；因为默认使用该配置</span><br><span class="line"></span><br><span class="line">class DevelopmentConfig(Config):</span><br><span class="line">    DEBUG = True</span><br><span class="line">    DB_ENGINE = &apos;mysql&apos;</span><br><span class="line">    DB_HOST = &apos;127.0.0.1&apos;</span><br><span class="line">    DB_PORT = 3306</span><br><span class="line">    DB_USER = &apos;jumpserver&apos;</span><br><span class="line">    DB_PASSWORD = &apos;123456&apos;</span><br><span class="line">    DB_NAME = &apos;jumpserver&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最终效果：</span><br><span class="line"></span><br><span class="line">[root@jumpserver jumpserver]# cat config.py </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">    jumpserver.config</span><br><span class="line">    ~~~~~~~~~~~~~~~~~</span><br><span class="line"></span><br><span class="line">    Jumpserver project setting file</span><br><span class="line"></span><br><span class="line">    :copyright: (c) 2014-2017 by Jumpserver Team</span><br><span class="line">    :license: GPL v2, see LICENSE for more details.</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Config:</span><br><span class="line">    # Use it to encrypt or decrypt data</span><br><span class="line">    # SECURITY WARNING: keep the secret key used in production secret!</span><br><span class="line">    SECRET_KEY = os.environ.get(&apos;SECRET_KEY&apos;) or &apos;2vym+ky!997d5kkcc64mnz06y1mmui3lut#(^wd=%s_qj$1%x&apos;</span><br><span class="line"></span><br><span class="line">    # Django security setting, if your disable debug model, you should setting that</span><br><span class="line">    ALLOWED_HOSTS = [&apos;*&apos;]</span><br><span class="line"></span><br><span class="line">    # Development env open this, when error occur display the full process track, Production disable it</span><br><span class="line">    DEBUG = True</span><br><span class="line"></span><br><span class="line">    # DEBUG, INFO, WARNING, ERROR, CRITICAL can set. See https://docs.djangoproject.com/en/1.10/topics/logging/</span><br><span class="line">    LOG_LEVEL = &apos;DEBUG&apos;</span><br><span class="line">    LOG_DIR = os.path.join(BASE_DIR, &apos;logs&apos;)</span><br><span class="line"></span><br><span class="line">    # Database setting, Support sqlite3, mysql, postgres ....</span><br><span class="line">    # See https://docs.djangoproject.com/en/1.10/ref/settings/#databases</span><br><span class="line"></span><br><span class="line">    # SQLite setting:</span><br><span class="line">    DB_ENGINE = &apos;sqlite3&apos;</span><br><span class="line">    DB_NAME = os.path.join(BASE_DIR, &apos;data&apos;, &apos;db.sqlite3&apos;)</span><br><span class="line"></span><br><span class="line">    # MySQL or postgres setting like:</span><br><span class="line">    # DB_ENGINE = &apos;mysql&apos;</span><br><span class="line">    # DB_HOST = &apos;127.0.0.1&apos;</span><br><span class="line">    # DB_PORT = 3306</span><br><span class="line">    # DB_USER = &apos;root&apos;</span><br><span class="line">    # DB_PASSWORD = &apos;&apos;</span><br><span class="line">    # DB_NAME = &apos;jumpserver&apos;</span><br><span class="line"></span><br><span class="line">    # When Django start it will bind this host and port</span><br><span class="line">    # ./manage.py runserver 127.0.0.1:8080</span><br><span class="line">    HTTP_BIND_HOST = &apos;0.0.0.0&apos;</span><br><span class="line">    HTTP_LISTEN_PORT = 8080</span><br><span class="line"></span><br><span class="line">    # Use Redis as broker for celery and web socket</span><br><span class="line">    REDIS_HOST = &apos;127.0.0.1&apos;</span><br><span class="line">    REDIS_PORT = 6379</span><br><span class="line">    REDIS_PASSWORD = &apos;&apos;</span><br><span class="line">    BROKER_URL = &apos;redis://%(password)s%(host)s:%(port)s/3&apos; % &#123;</span><br><span class="line">        &apos;password&apos;: REDIS_PASSWORD,</span><br><span class="line">        &apos;host&apos;: REDIS_HOST,</span><br><span class="line">        &apos;port&apos;: REDIS_PORT,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def __getattr__(self, item):</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#class DevelopmentConfig(Config):</span><br><span class="line">#    pass</span><br><span class="line">class DevelopmentConfig(Config):</span><br><span class="line">    DEBUG = True</span><br><span class="line">    DB_ENGINE = &apos;mysql&apos;</span><br><span class="line">    DB_HOST = &apos;127.0.0.1&apos;</span><br><span class="line">    DB_PORT = 3306</span><br><span class="line">    DB_USER = &apos;jumpserver&apos;</span><br><span class="line">    DB_PASSWORD = &apos;123456&apos;</span><br><span class="line">    DB_NAME = &apos;jumpserver&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class TestConfig(Config):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ProductionConfig(Config):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Default using Config settings, you can write if/else for different env</span><br><span class="line">config = DevelopmentConfig()</span><br></pre></td></tr></table></figure><p>⑦. 数据库表结构和初始化数据</p><p><strong>(py3)虚拟环境下进行；且确保之前的pip已经安装完成了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver jumpserver]# cd /server/app/jumpserver/utils</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver utils]#  bash make_migrations.sh</span><br></pre></td></tr></table></figure><p>⑧. 运行jumpserver</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver utils]# cd /server/app/jumpserver/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver jumpserver]# chmod +x jms </span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver jumpserver]# ./jms start all -d   #-d后台运行</span><br></pre></td></tr></table></figure><p>jumpserver的使用方法：<strong>./jms start|stop|status|restart all</strong></p><p>⑨. 访问测试</p><p><a href="http://10.0.0.161:8080/" target="_blank" rel="noopener">http://10.0.0.161:8080/</a></p><p>默认 账号：admin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码：admin</span><br></pre></td></tr></table></figure><h3 id="安装-组件"><a href="#安装-组件" class="headerlink" title="安装 组件"></a>安装 组件</h3><p>在web页面上点击web终端</p><p>会看到：</p><p>Luna是单独部署的一个程序，你需要部署luna，coco，配置nginx做url分发, 如果你看到了这个页面，证明你访问的不是nginx监听的端口，祝你好运</p><p><strong>所以接下来，我们安装luna和coco</strong></p><h4 id="安装coco"><a href="#安装coco" class="headerlink" title="安装coco"></a>安装coco</h4><p>**coco实现了</p><p>SSH Server 和 Web Terminal Server 的组件，提供 SSH 和 WebSocket 接口,</p><p>使用 Paramiko 和 Flask 开发**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver coco]# cd /server/sources/coco/requirements/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver requirements]# yum install `cat rpm_requirements.txt`</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver requirements]# pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver requirements]# cp -r /server/sources/coco/ /server/app/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver requirements]# cd /server/app/coco/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver coco]# cp conf_example.py conf.py</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver coco]# chmod +x cocod </span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver coco]# ./cocod start -d</span><br><span class="line">Start coco process</span><br></pre></td></tr></table></figure><p>使用方法：<strong>./cocod start|stop|status|restart</strong></p><h4 id="安装Web-Terminal前端-Luna组件"><a href="#安装Web-Terminal前端-Luna组件" class="headerlink" title="安装Web-Terminal前端-Luna组件"></a>安装Web-Terminal前端-Luna组件</h4><p><strong>Luna概述：Luna现在是 Web Terminal 前端，计划前端页面都由该项目提供，Jumpserver 只提供 API，不再负责后台渲染html等</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver coco]# cd /server/sources/</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver sources]# tar xf luna.tar.gz </span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver sources]# cp -r luna /server/app/</span><br></pre></td></tr></table></figure><h4 id="配置Nginx整合各组件"><a href="#配置Nginx整合各组件" class="headerlink" title="配置Nginx整合各组件"></a>配置Nginx整合各组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver sources]#  yum -y install nginx</span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver sources]# vim /etc/nginx/^Cinx.conf</span><br><span class="line">将原先的server&#123;&#125; 段全部替换掉</span><br></pre></td></tr></table></figure><p>** 最终的结果如下：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver nginx]# grep -Ev &quot;#|^$&quot; /etc/nginx/nginx.conf</span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    location /luna/ &#123;</span><br><span class="line">        try_files $uri / /index.html;</span><br><span class="line">        alias /server/app/luna/;</span><br><span class="line">    &#125;</span><br><span class="line">    location /media/ &#123;</span><br><span class="line">        add_header Content-Encoding gzip;</span><br><span class="line">        root /server/app/jumpserver/data/;</span><br><span class="line">    &#125;</span><br><span class="line">    location /static/ &#123;</span><br><span class="line">        root /server/app/jumpserver/data/;</span><br><span class="line">    &#125;</span><br><span class="line">    location /socket.io/ &#123;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver sources]# nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br></pre></td></tr></table></figure><p>运行 Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver nginx]# systemctl start nginx </span><br><span class="line"></span><br><span class="line">(py3) [root@jumpserver nginx]# systemctl enable nginx </span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.</span><br></pre></td></tr></table></figure><p>在web页面上点击</p><p>默认信息，确认即可</p><p>服务器命令行终端测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@jumpserver nginx]# ssh -p2222 admin@10.0.0.161</span><br><span class="line">The authenticity of host &apos;[10.0.0.161]:2222 ([10.0.0.161]:2222)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:8MCnHK0t1yfaxyf6fFq1e93fE9JDBc4hG00OlnWelXY.</span><br><span class="line">RSA key fingerprint is MD5:b5:6d:74:d6:00:90:f4:93:8f:b8:de:33:14:ea:6b:ee.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;[10.0.0.161]:2222&apos; (RSA) to the list of known hosts.</span><br><span class="line">admin@10.0.0.161&apos;s password: #填写admin的密码admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Administrator, 欢迎使用Jumpserver开源跳板机系统  </span><br><span class="line"></span><br><span class="line">    1) 输入 ID 直接登录 或 输入部分 IP,主机名,备注 进行搜索登录(如果唯一).</span><br><span class="line">    2) 输入 / + IP, 主机名 or 备注 搜索. 如: /ip</span><br><span class="line">    3) 输入 P/p 显示您有权限的主机.</span><br><span class="line">    4) 输入 G/g 显示您有权限的主机组.</span><br><span class="line">    5) 输入 G/g + 组ID 显示该组下主机. 如: g1</span><br><span class="line">    6) 输入 H/h 帮助.</span><br><span class="line">    0) 输入 Q/q 退出.</span><br></pre></td></tr></table></figure><p>用10.0.0.161就可以直接访问了，不需要再加8080</p><p><strong>到此安装成功</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;官方网站&quot;&gt;&lt;a href=&quot;#官方网站&quot; class=&quot;headerlink&quot; title=&quot;官方网站&quot;&gt;&lt;/a&gt;官方网站&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://jumpserver.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://jumpserver.org&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="-linux - jumpserver" scheme="https://e.coding.net/zzzhbr/tags/linux-jumpserver/"/>
    
  </entry>
  
  <entry>
    <title>git+hexo打造属于你的网站</title>
    <link href="https://e.coding.net/zzzhbr/2019/09/06/git+hexo%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    <id>https://e.coding.net/zzzhbr/2019/09/06/git+hexo打造属于你的网站/</id>
    <published>2019-09-06T06:05:14.794Z</published>
    <updated>2019-09-06T06:14:46.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础介绍"><a href="#基础介绍" class="headerlink" title="基础介绍"></a>基础介绍</h1><p>是不是觉得现在的博客五花八门，但又感觉没有适合自己的。</p><p>直到<strong>HEXO</strong>；<strong>Jekyll</strong>等的出现；可以和github结合起来就可以打造属于自己的博客了！而且是免费的哦！！！</p><a id="more"></a><p>建议新手先可以先选用hexo；有些基础了再来玩Jeklly。</p><p>hexo是基于Node.js的静态博客程序；所以搭建过程或许你会觉得比jeklly繁琐些，但是相信我，配置修改等高度DIY的东西会让你累觉不爱的！</p><p>下面开始DIY之旅吧</p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="0-github"><a href="#0-github" class="headerlink" title="0. github"></a>0. github</h2><p><strong>首先注册个github的账号</strong></p><p>直接正常注册就好</p><p>接着在右上角有个<strong>+</strong>号，点击<strong>+</strong> New reposition  新建一个仓库</p><p>这个Repository name必须是：<strong>用户名</strong>.github.io   （这里的用户名用你的github账号名）</p><p>例如我的就是zzzhbr.github.io</p><p>加下去Description (optional)可以根据你自己的想法写（也可不写）</p><p>public</p><p>Initialize this repository with a README这个也可以勾上</p><p>create repository 就行</p><p>这个README是md文档；可以根据自己的想法写；比如就简单的介绍一下是个仓库干嘛的就行</p><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1. 安装Node.js"></a>1. 安装Node.js</h2><p>首先到<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>的官网上下载平台</p><p>新版本直接下载就行了；我下的是<strong>当下最新版：10.16.0LTS</strong></p><p>这个安装过程就很简单了；双击运行node-v10.16.0-x64.msi；然后一直下一步操作即可</p><p>win+r</p><p>输入cmd，输入node -v检查下是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\zzz&gt;node -v</span><br><span class="line">v10.16.0</span><br></pre></td></tr></table></figure><h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h2><p>简单来说Git是开源的分布式版本控制系统</p><p>我们在本地先搭建博客，然后用git同步到github上面去</p><p>到官网上去下载<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a> 我下载的依然是<strong>当下最新</strong>的<strong>2.22.0 64-bit</strong></p><p>也是双击Git-2.22.0-64-bit.exe直接安装即可</p><p>安装成功后，可以开始讲Git与GitHub帐号绑定，鼠标右击打开Git Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p>生成SSH秘钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p>如果有交互直接回车就好（3次回车）</p><p>结束后仔细看结果会发现有秘钥存放的位置：</p><p>Your identification has been saved in /c/Users/zzz/.ssh/id_rsa.<br>Your public key has been saved in /c/Users/zzz/.ssh/id_rsa.pub.</p><p>打开文件夹</p><p>然后用记事本打开id_rsa.pub 这个文件就行</p><p>接着将里面的内容全部复制</p><p>点击你的头像————&gt;Settings————-&gt;SSH and GPG keys———-&gt;New SSH key</p><p>Title是标题，任意填即可</p><p>Key框里黏贴上刚刚复制的内容；最后点击Add SSH key</p><p>在Git Bash中检测GitHub公钥设置是否成功，输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com ：</span><br><span class="line">The authenticity of host <span class="string">'github.com (13.229.188.59)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes #第一次连接要手动输入yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">出现</span></span><br><span class="line"><span class="string">Hi zzzhbr! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br><span class="line"></span><br><span class="line">You<span class="string">'ve successfully authenticated 这个就代表成功</span></span><br></pre></td></tr></table></figure><p>这里配置ssh-key的原因是如果以后用git推送的话，可以直接不用输入密码ssh连接上去，方便git推送到github上</p><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>Hexo就是我们的个人博客网站的框架</p><p>这里需要自己在电脑常里创建一个文件夹，可以命名为blog或其他自己想要的</p><p>Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击在此处打开命令窗口</p><p><strong>注意以下的操作都是在blog的文件夹下进行</strong></p><p><strong>在blog文件夹下打开命令行，打开git bash here</strong></p><p>命令行：在blog文件夹下shift+右键   在此处打开命令窗口</p><p>git bash here 就是git的命令行</p><p>在命令行使用命令安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这个安装时间较长耐心等待，安装完成后</p><p>在blog这个文件夹里右键git bash here输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br><span class="line"><span class="comment">#可以将 blog 文件夹初始化成一个博客文件夹</span></span><br><span class="line">npm install </span><br><span class="line"><span class="comment">#安装依赖包</span></span><br></pre></td></tr></table></figure><p>如果出现错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm WARN babel-eslint@10.0.2 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br></pre></td></tr></table></figure><p>在命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install lodash</span><br><span class="line">npm install eslint@^4.12.1</span><br></pre></td></tr></table></figure><p>为了检测我们的网站雏形，分别按顺序输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"><span class="comment"># 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 将生成的网页放在了本地。，输入完成后就可以测试了</span></span><br></pre></td></tr></table></figure><p>打开浏览器输入地址：</p><p>localhost:4000</p><p>可以看到我们的网站了，并且有个Hello World 的文章</p><p>回到我们打开的git bash 按ctrl+c 停止本地博客</p><p>再去强制刷新页面（ctrl+F5）就会发现无法访问了</p><h2 id="发布到github上"><a href="#发布到github上" class="headerlink" title="发布到github上"></a>发布到github上</h2><p>刚刚我们的操作只是在本地上可以使用，但是不能让广大网友看见，所以我们接下来就要将他部署到github上面去</p><p>在blog的根目录下有个<strong>_config.yml</strong>  这是<strong>站点</strong>配置文件</p><p>翻到最后面</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将原先的</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span></span><br><span class="line"><span class="comment">#更改成</span></span><br><span class="line"><span class="attr">deploy:</span> </span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">这里填入你之前在GitHub上创建仓库的完整路径，记得加上</span> <span class="string">.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>参考如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/zzzhbr/zzzhbr.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>保存站点配置文件；这一步就是让hexo知道你要把blog部署在github仓库上</p><p>最后安装git部署插件(在命令行部署)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>如果出现错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm WARN ajv-keywords@3.4.1 requires a peer of ajv@^6.9.1 but none is installed. You must install peer dependencies yourself.</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install ajv@^6.9.1</span><br></pre></td></tr></table></figure><p>然后在git bash here上，我们分别输入三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br><span class="line">跳出github的登录页面，登录即可</span><br></pre></td></tr></table></figure><p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。</p><p>完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="https://zzzhbr.github.io" target="_blank" rel="noopener">https://zzzhbr.github.io</a></p><p>就是_config.yml配置里的那段repo: <a href="https://github.com/zzzhbr/zzzhbr.github.io.git" target="_blank" rel="noopener">https://github.com/zzzhbr/zzzhbr.github.io.git</a> 取最后的那个部分zzzhbr.github.io.git将git去掉就行</p><p>然后就会惊奇的发现网站已经搭建完成了</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>之所以用命令行来执行npm的相关命令是因为能看见详细信息</p><p>这是最简单的hexo默认主题搭建的；如果需要美化，请到hexo官网下载好看的主题或自己编写！</p><p>如果hexo官网找到自己喜欢的主题，请根据主题的直到说明进行操作即可！</p><p>最后</p><p>enjoy it！！！</p><h2 id="下载主题配置示例"><a href="#下载主题配置示例" class="headerlink" title="下载主题配置示例"></a>下载主题配置示例</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础介绍&quot;&gt;&lt;a href=&quot;#基础介绍&quot; class=&quot;headerlink&quot; title=&quot;基础介绍&quot;&gt;&lt;/a&gt;基础介绍&lt;/h1&gt;&lt;p&gt;是不是觉得现在的博客五花八门，但又感觉没有适合自己的。&lt;/p&gt;
&lt;p&gt;直到&lt;strong&gt;HEXO&lt;/strong&gt;；&lt;strong&gt;Jekyll&lt;/strong&gt;等的出现；可以和github结合起来就可以打造属于自己的博客了！而且是免费的哦！！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="网站" scheme="https://e.coding.net/zzzhbr/categories/%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="hexo" scheme="https://e.coding.net/zzzhbr/tags/hexo/"/>
    
  </entry>
  
</feed>
